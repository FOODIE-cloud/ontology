@prefix map: <#> .
@prefix db: <> .
@prefix vocab: <vocab/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix d2rq: <http://www.wiwiss.fu-berlin.de/suhl/bizer/D2RQ/0.1#> .
@prefix jdbc: <http://d2rq.org/terms/jdbc/> .
@prefix eg: <http://example.org/ns#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix qb: <http://purl.org/linked-data/cube#> .
@prefix qb4st: <http://www.w3.org/ns/qb4st/> .
@prefix sdmx-attribute: <http://purl.org/linked-data/sdmx/2009/attribute#> .
@prefix sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> .
@prefix sdmx-measure: <http://purl.org/linked-data/sdmx/2009/measure#> .
@prefix sosa: <http://www.w3.org/ns/sosa/> .
@prefix ssn: <http://www.w3.org/ns/ssn/> .
@prefix xml: <http://www.w3.org/XML/1998/namespace> .
@prefix geo:   <http://www.opengis.net/ont/geosparql#> .
@prefix virtrdf: <http://www.openlinksw.com/schemas/virtrdf#> .

map:database a d2rq:Database;
	d2rq:jdbcDriver "org.postgresql.Driver";
	d2rq:jdbcDSN "jdbc:postgresql://62.3.170.105/senslog_cloud";
	d2rq:username "senslog_cloud";
	d2rq:password "s3nsl0g!cl0ud";
	.

# NO TABLE - SLICEBYTIME
map:slices a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:class qb:SliceKey;
	d2rq:constantValue <sliceByTime>;
	.
map:slices__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:slices;
	d2rq:property rdfs:label;
	d2rq:pattern "Slice by Time";
	.
	map:slices__comment a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:slices;
	d2rq:property rdfs:comment;
	d2rq:pattern "Slice by fixing sensor and unit, results in observations as time series";
	.
	map:slices_componentProperty a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:slices;
	d2rq:property  qb:componentProperty;
	d2rq:constantValue sdmx-dimension:timePeriod;
	.


# NO TABLE - G_UNITS 
map:dataset a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:class sosa:Platform;
	d2rq:class qb:DataSet;
	d2rq:constantValue <platform/dataset>;
	.	
map:dataset__comment a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:dataset;
	d2rq:property rdfs:comment;
	d2rq:pattern "Sensor Data provided from Senslog";
	.	
map:dataset_id_sensor__ref a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:dataset;
	d2rq:property sosa:hosts;
	d2rq:refersToClassMap map:unit2sensor;
	.
map:dataset_slice_id__ref a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:dataset;
	d2rq:property qb:slice;
	d2rq:refersToClassMap map:unit2sensor;
	.	
map:dataset_structure a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:dataset;
	d2rq:property qb:structure;
	d2rq:constantValue <data_structure>;
	.	

# NO TABLE - TimePeriod
map:time_period a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:class qb:DimensionProperty;
	d2rq:class rdf:Property;
	d2rq:constantValue <timePeriod>;
	.		
map:time_period__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:time_period;
	d2rq:property rdfs:label;
	d2rq:pattern "Time Period";
	.	
map:time_period__subproperty a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:time_period;
	d2rq:property rdfs:subPropertyOf;
	d2rq:constantValue sdmx-dimension:timePeriod;
	.	
map:time_period__range a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:time_period;
	d2rq:property rdfs:range;
	d2rq:constantValue xsd:dateTime;
	.	


# Table observation
map:observation a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "observation/@@observation.id@@";
	d2rq:class qb:Observation;
	d2rq:class sosa:Observation;
	d2rq:classDefinitionLabel "observation";
	.
map:observation__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:observation;
	d2rq:property rdfs:label;
	d2rq:pattern "observation #@@observation.id@@";
	.
#map:observation_id a d2rq:PropertyBridge;
#	d2rq:belongsToClassMap map:observation;
#	d2rq:property vocab:observation_id;
#	d2rq:propertyDefinitionLabel "observation id";
#	d2rq:column "observation.id";
#	d2rq:datatype xsd:integer;
#	.
map:observation_timestamp a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:observation;
	d2rq:property sdmx-dimension:timeperiod;
	d2rq:propertyDefinitionLabel "observation timestamp";
	d2rq:column "observation.timestamp";
	d2rq:datatype xsd:dateTime;
	.
map:observation_value a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:observation;
	d2rq:property sosa:hasSimpleResult;
	d2rq:propertyDefinitionLabel "observation value";
	d2rq:column "observation.value";
	d2rq:datatype xsd:double;
	.
map:observation_id_sensor__ref a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:observation;
	d2rq:property sosa:madeBySensor;
	d2rq:refersToClassMap map:sensor;
	d2rq:join "observation.id_sensor => sensor.id";
	.
map:observation_dataSet a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:observation;
	d2rq:property qb:dataSet;
	d2rq:constantValue  <platform/dataset> ;
	.	


# Table phenomenon
map:phenomenon a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "phenomenon/@@phenomenon.id@@";
	d2rq:class sosa:ObservableProperty;
	d2rq:class qb:MeasureProperty;
	d2rq:class rdf:Property;
	d2rq:classDefinitionLabel "phenomenon";
	.
map:phenomenon__subproperty a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:phenomenon;
	d2rq:property rdfs:subPropertyOf;
	d2rq:constantValue sdmx-measure:obsValue;
	.	
map:phenomenon__range a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:phenomenon;
	d2rq:property rdfs:range;
	d2rq:constantValue xsd:decimal;
	.	
#map:phenomenon__label a d2rq:PropertyBridge;
#	d2rq:belongsToClassMap map:phenomenon;
#	d2rq:property rdfs:label;
#	d2rq:pattern "phenomenon #@@phenomenon.id@@";
#	.
#map:phenomenon_id a d2rq:PropertyBridge;
#	d2rq:belongsToClassMap map:phenomenon;
#	d2rq:property vocab:phenomenon_id;
#	d2rq:propertyDefinitionLabel "phenomenon id";
#	d2rq:column "phenomenon.id";
#	d2rq:datatype xsd:integer;
#	.
map:phenomenon_description a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:phenomenon;
	d2rq:property rdfs:label;
	d2rq:propertyDefinitionLabel "phenomenon description";
	d2rq:column "phenomenon.description";
	.
map:phenomenon_physical_unit a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:phenomenon;
	d2rq:property sdmx-attribute:unitMeasure;
	d2rq:propertyDefinitionLabel "phenomenon physical_unit";
	d2rq:column "phenomenon.physical_unit";
	.
map:phenomenon_phenomenon_id__ref a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:phenomenon;
	d2rq:property sosa:isObservedBy;
#	d2rq:refersToClassMap map:unit2sensor;
	d2rq:refersToClassMap map:sensor;
	d2rq:join "sensor.id_phenomenon => phenomenon.id";
	.


# Table sensor
map:sensor a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "sensor/@@sensor.id@@";
	d2rq:class sosa:Sensor;
	d2rq:classDefinitionLabel "sensor";
	.
#map:sensor__label a d2rq:PropertyBridge;
#	d2rq:belongsToClassMap map:sensor;
#	d2rq:property rdfs:label;
#	d2rq:pattern "sensor #@@sensor.id@@";
#	.
#map:id_sensor a d2rq:PropertyBridge;
#	d2rq:belongsToClassMap map:sensor;
#	d2rq:property vocab:id_sensor;
#	d2rq:propertyDefinitionLabel "sensor id";
#	d2rq:column "sensor.id";
#	d2rq:datatype xsd:integer;
#	.
map:sensor_description a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:sensor;
	d2rq:property rdfs:label;
	d2rq:propertyDefinitionLabel "sensor description";
	d2rq:column "sensor.description";
	.
map:sensor_type a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:sensor;
	d2rq:property rdfs:comment;
	d2rq:propertyDefinitionLabel "sensor type";
	d2rq:column "sensor.type";
	.
map:id_sensor_phenomenon__ref a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:sensor;
	d2rq:property sosa:observes;
	d2rq:refersToClassMap map:phenomenon;
	d2rq:join "sensor.id_phenomenon => phenomenon.id";
	.
map:sensor_madeobservation a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:sensor;
	d2rq:property sosa:madeObservation;
	d2rq:refersToClassMap map:observation;
	d2rq:join "observation.id_sensor => sensor.id";
	.		
map:sensor_madeobservation a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:sensor;
	d2rq:property qb:observation;
	d2rq:refersToClassMap map:observation;
	d2rq:join "observation.id_sensor => sensor.id";
	.	
map:sensor_isHostedBy_unit a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:sensor;
	d2rq:property qb:isHostedBy;
	d2rq:refersToClassMap map:unit;
	d2rq:join "unit2sensor.id_sensor => sensor.id";
	d2rq:join "unit2sensor.id_unit => unit.id";
	.	
	
# Table unit
map:unit a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "unit/@@unit.id@@";
	d2rq:class sosa:Platform;
	d2rq:classDefinitionLabel "unit";
	.
#map:unit__label a d2rq:PropertyBridge;
#	d2rq:belongsToClassMap map:unit;
#	d2rq:property rdfs:label;
#	d2rq:pattern "unit #@@unit.id@@";
#	.
#map:unit_id a d2rq:PropertyBridge;
#	d2rq:belongsToClassMap map:unit;
#	d2rq:property vocab:unit_id;
#	d2rq:propertyDefinitionLabel "unit id";
#	d2rq:column "unit.id";
#	d2rq:datatype xsd:integer;
#	.
map:unit_description a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:unit;
	d2rq:property rdfs:label;
	d2rq:propertyDefinitionLabel "unit description";
	d2rq:column "unit.description";
	.
map:unit_id_sensor__ref a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:unit;
	d2rq:property sosa:hosts;
	d2rq:refersToClassMap map:sensor;
	d2rq:join "unit2sensor.id_sensor => sensor.id";
	d2rq:join "unit2sensor.id_unit => unit.id";
	.	
	
# Table unit2sensor
map:unit2sensor a d2rq:ClassMap;
	d2rq:dataStorage map:database;
#	d2rq:uriPattern "unit2sensor/@@unit2sensor.id@@";
	d2rq:uriPattern "unit-sensor/@@unit2sensor.id_unit|urlify@@-@@unit2sensor.id_sensor|urlify@@";
	d2rq:class sosa:Sensor;
	d2rq:class qb:Slice;
	d2rq:classDefinitionLabel "unit2sensor";
	.
#map:unit2sensor__label a d2rq:PropertyBridge;
#	d2rq:belongsToClassMap map:unit2sensor;
#	d2rq:property rdfs:label;
#	d2rq:pattern "unit2sensor #@@unit2sensor.id@@";
#	.
#map:unit2id_sensor a d2rq:PropertyBridge;
#	d2rq:belongsToClassMap map:unit2sensor;
#	d2rq:property vocab:unit2id_sensor;
#	d2rq:propertyDefinitionLabel "unit2sensor id";
#	d2rq:column "unit2sensor.id";
#	d2rq:datatype xsd:integer;
#	.
map:unit2sensor_sensor_name a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:unit2sensor;
	d2rq:property rdfs:label;
	d2rq:pattern "@@unit.description@@-@@sensor.description@@";
	d2rq:join "unit2sensor.id_sensor => sensor.id";
	d2rq:join "unit2sensor.id_unit => unit.id";
	.
map:unit2sensor_sliceStructure a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:unit2sensor;
	d2rq:property qb:sliceStructure;
	d2rq:constantValue <sliceByTime>;
	.	
map:unit2sensor_isHostedBy a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:unit2sensor;
	d2rq:property qb:isHostedBy;
	d2rq:constantValue <platform/dataset>;
	.		
#map:unit2id_sensor_sensor a d2rq:PropertyBridge;
#	d2rq:belongsToClassMap map:unit2sensor;
#	d2rq:property vocab:unit2id_sensor_sensor;
#	d2rq:propertyDefinitionLabel "unit2sensor id_sensor";
#	d2rq:column "unit2sensor.id_sensor";
#	d2rq:datatype xsd:integer;
#	.
#map:unit2id_sensor_unit a d2rq:PropertyBridge;
#	d2rq:belongsToClassMap map:unit2sensor;
#	d2rq:property vocab:unit2id_sensor_unit;
#	d2rq:propertyDefinitionLabel "unit2sensor id_unit";
#	d2rq:column "unit2sensor.id_unit";
#	d2rq:datatype xsd:integer;
#	.



